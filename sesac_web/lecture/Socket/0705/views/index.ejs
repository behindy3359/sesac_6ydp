<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="/socket.io/socket.io.js"></script>
  <title>채팅방 만들기!</title>
  <style>
    #body{
      width: 100%;
      height: 70vh;
      position: relative;
      background-color: aquamarine;
    }
    #chat{
      position: absolute;
      bottom:  0px;
      display: flex;
      justify-content: space-between;
      width: 100%;
    }
    #notice{
      display: flex;
      /* flex-direction: column; */
      text-align: center;
      color: gray;
    }
  </style>
</head>
  <body>
    <h1>사렬주세요우</h1>
    <div>
      <form id="room">
        <input type="text" id="roomName" placeholder="채팅방 만들기">
        <input type="text" id="userName" placeholder="사용자 이름 입력">
        <button>생성</button>
      </form>
    </div>
    <div id="body" hidden>
      <div id="message">
        <div id="notice">
        </div>
        <form id="chat">
          <select id="userList"></select>
          <input type="text" id="chatMessgae" placeholder="메세지 입력">
          <button>입력</button>
        </form>
      </div>
    </div>
  </body>
<script>
  const socket = io();

  const roomForm =document.querySelector('#room');
  const chatForm =document.querySelector('#chat');
  const notice = document.querySelector('#notice');
  const message = document.querySelector('#message');

  socket.on('connect',()=>{
    console.log("클라이언트 연결 완료 ::" , socket.id);
  });

  let myName = '';

  roomForm.addEventListener('submit',(e)=>{
    e.preventDefault();
    const roomName = roomForm.querySelector('#roomName').value;
    const userName = roomForm.querySelector('#userName').value;

    if(roomName === '' || userName === ''){
      alert('방 제목과 사용자명을 입력해주세요');
      return ;
    }
    socket.emit('create',{roomName,userName})
    const main = document.querySelector('#room');
    const body = document.querySelector('#body');
    main.hidden = true;
    body.hidden = false;

    myName = userName;
  })

  socket.on('notice',(res)=>{
    const div =document.createElement('div');
    const p = document.createElement('p');
    p.textContent = res ;
    div.appendChild(p);
    notice.appendChild(div);
  });

      // [4] 유저 리스트 갱신
  socket.on('userList', (res) => {
    console.log("클라이언트 측의 userList :: ", res);
    const lists = document.querySelector('#userList');
    let options = `<option value='all'>전체</option>`;
    for (let i of res) {
        options += `<option value='${i.key}'>${i.userName}</option>`
    }
    lists.innerHTML = options;
  })
</script>
</html>