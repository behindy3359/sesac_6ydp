// Chap 1. 변수 선언  
//  변수 선언 : 변수 정의
//  변수 할당 : = 연산자를 이용해 값을 넣는다.
//  초기화 : 변수에 처음 할당하는 순간
//  
//  ### var
//  - 선언 단계와 초기화 할당 단계가 동시에 진행이 되며, 초기화에는 undefined 값이 들어간다.
//  - 중복선언, 재선언이 가능하며, 예기치못한 값을 반환할 수 있음.
//  - 선언 이전에 참조하면 언제나 undefined를 반환한다.
//  
//
//
//  Chap 2. 변수선언 키워드
//  #1. - var
var a;
console.log(a);
// 변수는 선언했지만, 값이 할당되지 않아 undefined가 출력!
a = "20000";
console.log(a);
var a2 = 4;// 변수 선언 & 할당
console.log(a2);

var a;
console.log(a);
var a = 'aa';
console.log(a);

//////////////////////////////////////////////////////////////////////////////////////////////
// var 변수의 문제점?
// 1. 중간에 같은 이름의 변수를 다시 선언해도, 기존의 변수에 덮어씌움.
//  - 변수를 선언했다는 것은 다른 데이터를 넣으려는 것인데, 그것을 기존의 데이터에 덮어 씌우면?! -> 문제 발생
// 2. 변수가 block단위에서 끝나는 것이 아니라, 자기 마음대로 전역으로 돌아다니면서 영향력을 행사한다. -> 의도치 않은 문제가 발생할 수 있다.
// 3. 호이스팅문제 
// 
// 
// 
// 
//////////////////////////////////////////////////////////////////////////////////////////////



// #2. - let
//  let키워드는 변수 중복 선언이 불가능 하지만, 재할당이 가능하다.
// #3. - const
// const키워드는 재선언, 재할당이 불가능하다 -> 초기 선언시 반드시 초기화를 동시에 진행해야한다.

let b;
console.log(b)
b = 1000;
console.log(b)
let b2 = 1000;
console.log(b2)
// let b2 =78; error : let 키워드는 중복선언 불가능
b2 = 12414141;
console.log(b2)

// Chap 4. 호이스팅 -? 기술면접에도 나옴?
//////////////////////////////////////////////////////////////////////////////////////////////
// JavaScript에서 변수 및 함수 선언이 코드의 최상단으로 올려지는 현상.
//  -> 변수와 함수의 선언이 실제 코드의 실행 전에 처리
//  -> 이는 코드를 이해하고 예측하는 데 혼란을 줄 수 있음.
console.log(x) // undefined
var x = 10;
console.log(x);
// 변수 x 가 선언되기 전에 사용되었지만, JS엔진은 선언을 최상단으로 올려서 undefined를 출력한 후, 나중에 변수를  초기화하여 값을 할당.
//////////////////////////////////////////////////////////////////////////////////////////////

